// Copyright (C) 2019-2022, Ava Labs, Inc. All rights reserved.
// See the file LICENSE for licensing terms.

// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ava-labs/avalanchego/vms/platformvm/avax (interfaces: AtomicUTXOManager)

// Package avax is a generated GoMock package.
package avax

import (
	reflect "reflect"

	ids "github.com/ava-labs/avalanchego/ids"
	set "github.com/ava-labs/avalanchego/utils/set"
	gomock "github.com/golang/mock/gomock"
)

// MockAtomicUTXOManager is a mock of AtomicUTXOManager interface.
type MockAtomicUTXOManager struct {
	ctrl     *gomock.Controller
	recorder *MockAtomicUTXOManagerMockRecorder
}

// MockAtomicUTXOManagerMockRecorder is the mock recorder for MockAtomicUTXOManager.
type MockAtomicUTXOManagerMockRecorder struct {
	mock *MockAtomicUTXOManager
}

// NewMockAtomicUTXOManager creates a new mock instance.
func NewMockAtomicUTXOManager(ctrl *gomock.Controller) *MockAtomicUTXOManager {
	mock := &MockAtomicUTXOManager{ctrl: ctrl}
	mock.recorder = &MockAtomicUTXOManagerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAtomicUTXOManager) EXPECT() *MockAtomicUTXOManagerMockRecorder {
	return m.recorder
}

// GetAtomicUTXOs mocks base method.
func (m *MockAtomicUTXOManager) GetAtomicUTXOs(arg0 ids.ID, arg1 set.Set[ids.ShortID], arg2 ids.ShortID, arg3 ids.ID, arg4 int) ([]*UTXO, ids.ShortID, ids.ID, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAtomicUTXOs", arg0, arg1, arg2, arg3, arg4)
	ret0, _ := ret[0].([]*UTXO)
	ret1, _ := ret[1].(ids.ShortID)
	ret2, _ := ret[2].(ids.ID)
	ret3, _ := ret[3].(error)
	return ret0, ret1, ret2, ret3
}

// GetAtomicUTXOs indicates an expected call of GetAtomicUTXOs.
func (mr *MockAtomicUTXOManagerMockRecorder) GetAtomicUTXOs(arg0, arg1, arg2, arg3, arg4 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAtomicUTXOs", reflect.TypeOf((*MockAtomicUTXOManager)(nil).GetAtomicUTXOs), arg0, arg1, arg2, arg3, arg4)
}
